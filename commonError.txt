1.[object Object] - коли виводимо об`єкт(наприклад currency) напряму всередині рядка `${currency}`,JS автоматично їх виводить у вигляді базового рядка,
тому звертаємся конкретно до властивостей.

2. undefined означає, що властивість ще не визначено.
2.1 null означає, що властивість була визначена, але порожня.

    const user = {
        id: 1,
        name: "Sam",
        age: null
    }

    console.log(user.age); // null
    console.log(user.birthday); // undefined


3.Operator precedence (пріоритет) - порядок пріоритету операторів слід пам'ятати завжди
    const user = {
        id: 1
    }

    const result = 2 + user.age ?? 18;// оператор(+) має більший пріоритет
    console.log(result); // NaN

3.2 Кожного разу, коли ви використовуєте інші оператори в тому самому виразі,щоб уникнути проблем з пріоритетом використовуємо круглі дужки
    const user = {
        id: 1
    }

    const result = 2 + (user.age ?? 18);
    console.log(result); // 20


4.Refactoring if conditions 

Приклад 1 забагато if
    const getPushMessage = status => {
    if (status === "received") {
        return "Restaurant started working on your order.";
    } else if (status === "prepared") {
        return "Driver is picking up your food."
    } else if (status === "en_route") {
        return "Driver is cycling your way!";
    } else if (status === "arrived") {
        return "Enjoy your food!";
    } else {
        return "Unknown status";
    }
}
Приклад 2 Ми можемо зробити рефакторінг цього:
    
    const getPushMessage = status => {
    const messages = {
        received: "Restaurant started working on your order.",
        prepared: "Driver is picking up your food.",
        en_route: "Driver is cycling your way!",
        arrived: "Enjoy your food!"
    };

    return messages[status] ?? "Unknown status";
}


5.Falsy values

 Значення нижче буде перетворено на false, а все інше буде перетворено на true:
    - false (is already a boolean)
    - null
    - undefined
    - 0
    - NaN
    - "" (empty string)  

